<?xml version="1.0" encoding="UTF-8"?>
<project default="all">

    <property name="properties.file" value="build.properties" />
		
    <target name="all" depends="init, test, builddir, compile, pack, collectAll, deploy">
    </target>

    <target name="init">
        <property file="${properties.file}"></property>
        <property file="${project.dir}/src/resources/settings.properties"></property>
    </target>

    <target name="builddir" depends="init">

        <delete dir="${build.dir}" verbose="false"/>

        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.dir}/bin" />
        <mkdir dir="${build.dir}/webstart" />
        <mkdir dir="${build.dir}/webstart/lib" />
        <mkdir dir="${build.dir}/standalone" />
        <mkdir dir="${build.dir}/standalone/lib" />
    </target>

    <target name="test">
        <echo message="workspace is: ${workspace.dir}" />
        <echo message="project is: ${project.dir}" />
    </target>

    <target name="check-key">
        <available file="${keystore.file}" property="keystore.file.exists">
        </available>
    </target>

    <target name="genkey" depends="check-key" unless="keystore.file.exists">
        <echo message="Create new key file: ${keystore.file}" />
        <genkey keystore="${keystore.file}" alias="${keystore.alias}" validity="365" storepass="${keystore.password}">
            <dname>
                <param name="CN" value="Sergey Selivanov" />
                <param name="OU" value="Home" />
                <param name="O" value="Sergey Selivanov" />
                <param name="C" value="UA" />
                <param name="L" value="Kharkov" />
            </dname>
        </genkey>
    </target>

    <target name="compile" depends="init, builddir">
        <javac 
        	srcdir="${project.dir}/src" 
         	destdir="${build.dir}/bin"
         	debug="on" includeantruntime="false" source="1.6" target="1.6"
        	
        	fork="yes" executable="${javac.executable}"
        	>
        	
            <classpath>
                <!-- fileset dir="${project.dir}/lib" includes="*.jar"></fileset -->
            	<fileset dir="${project.dir}/lib" includes="${libs}"></fileset>
            </classpath>
		</javac>
    </target>

    <target name="pack" depends="compile">
        <jar destfile="${build.dir}/GalleryPublisher.jar" index="yes">
            <fileset dir="${build.dir}/bin" includes="**/*.class"></fileset>
            <fileset dir="${project.dir}/src" includes="images/*"></fileset>
            <fileset dir="${project.dir}/src" includes="resources/*"></fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="org/sergeys/gpublish/ui/GalleryPublisher"/>
                <!--
                <attribute name="Sealed" value="true"/>
                <attribute name="implementation-vendor" value="sergeys"/>
                <attribute name="implementation-title" value="Gallery Publisher"/>
                <attribute name="implementation-version" value="1.0"/>

                does not work for some reason:
                <attribute name="Class-Path" value="lib/log4j-1.2.17.jar lib/slf4j-api-1.7.2.jar lib/slf4j-log4j12-1.7.2.jar"/>
                -->
            </manifest>
        </jar>
    </target>

    <target name="webstart" depends="pack, genkey">
        <echo message="webstart" />

        <copy file="${project.dir}/webstart/gallerypublisher.jnlp" tofile="${build.dir}/webstart/gallerypublisher.jnlp" overwrite="true">
        </copy>

        <copy file="${appicon}" tofile="${build.dir}/webstart/${appicon.file}" overwrite="true">
        </copy>

        <replace file="${build.dir}/webstart/gallerypublisher.jnlp">
            <replacefilter token="%REVISION%" value="${version}"/>
            <replacefilter token="%URL%" value="${webstart.url}"/>
            <replacefilter token="%APPICON%" value="${appicon.file}"/>
        </replace>

        <copy todir="${build.dir}/webstart/lib" verbose="true">
            <fileset dir="${project.dir}/lib" includes="${libs}">
            </fileset>
        </copy>

        <copy file="${build.dir}/GalleryPublisher.jar"
            tofile="${build.dir}/webstart/GalleryPublisher.${version}.jar"></copy>

        <signjar keystore="${keystore.file}" alias="${keystore.alias}" storepass="${keystore.password}" verbose="false">
            <fileset dir="${build.dir}/webstart">
                <include name="**/*.jar"/>
            </fileset>
        </signjar>
    </target>

    <target name="standalone" depends="pack">
        <echo message="standalone" />

        <copy file="${build.dir}/GalleryPublisher.jar" todir="${build.dir}/standalone"></copy>

        <copy todir="${build.dir}/standalone/lib" verbose="true">
            <fileset dir="${project.dir}/lib" includes="${libs}"></fileset>
        </copy>

        <copy todir="${build.dir}/standalone">
            <fileset dir="${project.dir}/standalone" includes="**/*"></fileset>
        </copy>

    </target>

    <target name="collectAll" depends="webstart, standalone">
    </target>

    <target name="deploy" depends="init">
        <mkdir dir="${deploy.dir}" />

        <delete>
            <fileset dir="${deploy.dir}">
            </fileset>
        </delete>

        <copy todir="${deploy.dir}">
            <fileset dir="${build.dir}/webstart">
            </fileset>
        </copy>

        <echo message="version ${version}, deployed for ${webstart.url}" />
    </target>
</project>
